source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette( c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
} <- function(variables) {
}
?rgn
?rgn
?rgb
colorRampPalette(c"blue","green",alpha=.5)
colorRampPalette(c("blue","green",alpha=.5))
p3<-colorRampPalette(c("blue","green",alpha=.5))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library(swirl)
swirl()
str(mpg)
qplot(disp,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, aes(color=drv))
qplot(displ,hwy,data=mpg, color=drv)
qplot(displ,hwy,data=mpg, color=drv, geom=c("points","smooth"))
qplot(displ,hwy,data=mpg, color=drv, geom=c("point","smooth"))
qplot(hwy,data=mpg, color=drv)
qplot(y=hwy,data=mpg, color=drv)
myhigh
qplot(drv,hwy, data=mpg, geom="boxplot")
qplot(drv,hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(disp, hwy, data=mpg, facet=.~drv)
qplot(displ, hwy, data=mpg, facet=.~drv)
qplot(displ, hwy, data=mpg, facets = =.~drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv~.)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
library(swirl)
swirl()
qplot(displ,hwy, data=mpg, geom=c("point","smooth", facets=.~drv))
qplot(displ,hwy, data=mpg, geom=c("point","smooth"), facets=.~drv))
qplot(displ,hwy, data=mpg, geom=c("point","smooth"), facets=.~drv)
g<-ggplot(mpg,aes=(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv)+labs("Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
)
g+geom_point(aes(color=drv))+labs("Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title("Swirl Rules!"))+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+the(base_family="Times")
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Hyghway Mileage"+title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Hyghway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds, binwidth=18497/30)
brk
counts
qplot(price,data=diamonds, binwidth=18497/30, fill=cut)
qplot(price,data=diamonds, geom="density")
qplot(price,data=diamonds, geom="density", color=cut)
qplot(carret, price,data=diamonds)
qplot(carat, price,data=diamonds)
qplot(carat, price,data=diamonds, shape=cut
)
qplot(carat, price,data=diamonds, color=cut)
qplot(carat, price,data=diamonds, color=cut, geom_smooth(method = "lm"))
qplot(carat, price,data=diamonds, color=cut) + geom_smooth(method = "lm")
qplot(carat, price,data=diamonds, color=cut) + geom_smooth(method = "lm")+facets(.~cut)
qplot(carat, price,data=diamonds, color=cut, facets=(.~cut)) + geom_smooth(method = "lm")
qplot(carat, price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method = "lm")
g<-ggplot(diamonds,aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1,length = 4, na.rm=TRUE))
cutpoints<-quantile(diamonds$carat, seq(0,1,length = 4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds,aes(depth, price))
g+geom_point(alpha=1/3)+facet_gride(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(. ~ cut)
set.seed(12345)
par(mar=rep(0.2,4))
dm = matrix(rnorm(400),nrow = 40)
image(1:10,1:40, t(dm)[,nrow(dm):1]
)
View(dm)
?t
heatmap(dm)
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
5
12
abline(h=0.05, col="green")
dist(dFsm)
hclust(hc)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,mean(distTmp[,2]),which.min)
apply(distTmp,2,which.min)
newClust
points(x,y,pch=19,cex=2,col=cols1[newClust])
newClust
x
tapply(x, newClust, mean)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCX, newCY. col=cols1, pch=8, ces=2, lwd=2)
points(newCx, newCy. col=cols1, pch=8, ces=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, ces=2, lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,col=cols1, pch=9,cex=2, lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svs(mat)
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,1:2]
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
svd1$d
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
sim(ssd)
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject)))
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd, subject == 1)
sub1
sim(sub1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <= dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)])
)
sim(svd1$u)
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-(562:563)],centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster,sub1$activity)
dim(Kclust$cemters)
dim(KClust$cemters)
dim(KClust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19, ylab="Walking Cluster")
plot(kClust$centers[walkdown,1:12],pch=19, ylab="Walkdown Cluster")
library()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames,"|",fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
wcol
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
str(pm0)
x0 <- pm0$Sample
x0 <- pm0$Sample.Value
str(x0)
sum(is.na(x0))/ length(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
)
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- Sample.Value(pm0sub)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(median(x0sub,na.rm = TRUE), lwd=2)
median(x0sub)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub,x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(nm0)
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, plot(rep(2,52),mrg[,3]))
with(mrg, plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(x,y)
segments(rep(2, 52), mrg[, 2], rep(2, 52), mrg[, 3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(dplyr); library(lubridate)
act <- read.csv("activity.csv", stringsAsFactors = FALSE)
act <- mutate(act,date =ymd(act$date))
setwd("D:/git_repo/RepData_PeerAssessment1")
act <- read.csv("activity.csv", stringsAsFactors = FALSE)
act <- mutate(act,date =ymd(act$date))
head(act)
nrow(act)
tail(act)
60/5
61*24*12
17568 /2355
abc = unique(act$interval)
nrow(abc)
length(abc)
View(act)
2355 / 24
2355 / (24*60*60)
(24*60*60) / 2355
5*12
60*24
30*24
60/12.5
60/2.5
24*24
cls
60*24
60*24*2
x = filter(act,interval=2300)
x = filter(act,interval==2300)
x
act <- read.csv("activity.csv", stringsAsFactors = FALSE)
act <- mutate(act,date =ymd(act$date))
steps_by_int_mean <- act %>% group_by(interval) %>%
summarize(int_mean = mean(steps, na.rm=T))
nrow(steps_by_int_mean)
nrow(act)
x = 17568 / 288
x
y = steps_by_int_mean$int_mean * 61
y
View(steps_by_int_mean)
with(steps_by_int_mean, plot(x=interva, y=int_mean, type="l"))
with(steps_by_int_mean, plot(x=interval, y=int_mean, type="l"))
v_nas <- is.na(act$steps)
sum(v_nas)
k = 0
for (i in v_nas) k=k+1
k
x = which(v_nas == T)
x
length(x)
v_nas <- is.na(act$steps)
x <- which(v_nas == T)
str(x)
k=0
for (i in x) k=k+1
k
View(x)
v_nas <- filter(act, is.na(act$steps))
nas <- filter(act, is.na(act$steps))
act2 <- mutate(act, linha=nrow())
act2 <- mutate(act, linha="a")
head(act2)
x = which(act$interval > 0)
x = which(act$interval >= 0)
act2 = cbind(act, x)
head(act2)
act2 = mutate(act, line=which(act$interval >= 0))
head(act2)
act2 = filter(act2, is.na(act2$steps))
View(act2)
lines <- act2$line
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
lines <- act2$line_na
for (i in lines) print(act2$line)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
lines <- act2$line_na
for (i in lines) print(act2$line[i])
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
lines <- act2$line_na
for (i in lines) print(act2$line[i])
View(lines)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
View(line_na)
lines <- act2$line_na
str(lines)
head(act2$line_na)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
lines <- act2$line_na
lines <- select(act3, act2$line_na)
lines <- select(act2, act2$line_na)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
head(line_na)
x = line_na$line
length(x)
for (i in x) print(x[i])
for (i in x) print(i)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
x = line_na$line
for (i in x) act2$steps[i] <- steps_by_int_mean$int_mean[i]
head(act2)
act2 = mutate(act, line=which(act$interval >= 0))
line_na = filter(act2, is.na(act2$steps))
x = line_na$line
for (i in x) act2$steps[i] <- steps_by_int_mean$int_mean[i]
sum(is.na(act2$steps))
View(act2)
View(act)
2355 / 5 +1
actx = mutate(act,j=(interval/5)+1)
View(actx)
actx = mutate(act,j=as.character(interval))
library(stringr)
actx = mutate(act,j=str_pad(as.character(interval),3,pad="0"))
actx = mutate(act,j=str_pad(as.character(interval),3,pad="0"))
for (i in 1:nrow(actx)) pint(actx[i,])
for (i in 1:nrow(actx)) print(actx[i,])
for (i in 1:nrow(actx)) print(actx[i,4])
actx = mutate(act,hora=substr(str_pad(as.character(interval),4,pad="0"),1,2),
minuto=substr(str_pad(as.character(interval),4,pad="0"),3,4))
actx = mutate(act,
hora=as.integer(substr(str_pad(as.character(interval),4,pad="0"),1,2)),
minuto=as.integer(substr(str_pad(as.character(interval),4,pad="0"),3,4)),
indice= (hora-1)+(minuto/5)+1)
actx = mutate(act,
hora=as.integer(substr(str_pad(as.character(interval),4,pad="0"),1,2)),
minuto=as.integer(substr(str_pad(as.character(interval),4,pad="0"),3,4)),
indice= (hora+1)+(minuto/5))
actx = mutate(act,
hora=as.integer(substr(str_pad(as.character(interval),4,pad="0"),1,2)),
minuto=as.integer(substr(str_pad(as.character(interval),4,pad="0"),3,4)),
indice= (hora*12)+(minuto/5)+1)
View(actx)
actx = mutate(act,
hora=as.integer(substr(str_pad(as.character(interval),4,pad="0"),1,2)),
minuto=as.integer(substr(str_pad(as.character(interval),4,pad="0"),3,4)),
indice= (hora*12)+(minuto/5)+1)
actx = mutate(act,
hora=as.integer(substr(str_pad(as.character(interval),4,pad="0"),1,2)),
minuto=as.integer(substr(str_pad(as.character(interval),4,pad="0"),3,4)),
indice= (hora*12)+(minuto/5)+1)
View(actx)
nrow(actx)
for (i in 1:nrow(actx)) {
if (is.na(actx$steps[i])) {
j = actx$indice[i]
actx$steps[i] <- steps_by_int_mean$int_mean[j]
}
}
View(actx)
sum(is.na(actx$steps))
